/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKTIMESERVICE_H
#define _MOCKTIMESERVICE_H

#include "unity.h"
#include "TimeService.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void MockTimeService_Init(void);
void MockTimeService_Destroy(void);
void MockTimeService_Verify(void);


typedef void(*cmock_TimeService_func_ptr1)(void);


#define TimeService_init_Ignore() TimeService_init_CMockIgnore()
void TimeService_init_CMockIgnore(void);
#define TimeService_init_StopIgnore() TimeService_init_CMockStopIgnore()
void TimeService_init_CMockStopIgnore(void);
#define TimeService_init_Expect() TimeService_init_CMockExpect(__LINE__)
void TimeService_init_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_TimeService_init_CALLBACK)(int cmock_num_calls);
void TimeService_init_AddCallback(CMOCK_TimeService_init_CALLBACK Callback);
void TimeService_init_Stub(CMOCK_TimeService_init_CALLBACK Callback);
#define TimeService_init_StubWithCallback TimeService_init_Stub
#define TimeService_destroy_Ignore() TimeService_destroy_CMockIgnore()
void TimeService_destroy_CMockIgnore(void);
#define TimeService_destroy_StopIgnore() TimeService_destroy_CMockStopIgnore()
void TimeService_destroy_CMockStopIgnore(void);
#define TimeService_destroy_Expect() TimeService_destroy_CMockExpect(__LINE__)
void TimeService_destroy_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_TimeService_destroy_CALLBACK)(int cmock_num_calls);
void TimeService_destroy_AddCallback(CMOCK_TimeService_destroy_CALLBACK Callback);
void TimeService_destroy_Stub(CMOCK_TimeService_destroy_CALLBACK Callback);
#define TimeService_destroy_StubWithCallback TimeService_destroy_Stub
#define TimeService_getTime_Ignore() TimeService_getTime_CMockIgnore()
void TimeService_getTime_CMockIgnore(void);
#define TimeService_getTime_StopIgnore() TimeService_getTime_CMockStopIgnore()
void TimeService_getTime_CMockStopIgnore(void);
#define TimeService_getTime_ExpectAnyArgs() TimeService_getTime_CMockExpectAnyArgs(__LINE__)
void TimeService_getTime_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define TimeService_getTime_Expect(time) TimeService_getTime_CMockExpect(__LINE__, time)
void TimeService_getTime_CMockExpect(UNITY_LINE_TYPE cmock_line, Time* time);
typedef void (* CMOCK_TimeService_getTime_CALLBACK)(Time* time, int cmock_num_calls);
void TimeService_getTime_AddCallback(CMOCK_TimeService_getTime_CALLBACK Callback);
void TimeService_getTime_Stub(CMOCK_TimeService_getTime_CALLBACK Callback);
#define TimeService_getTime_StubWithCallback TimeService_getTime_Stub
#define TimeService_getTime_ReturnThruPtr_time(time) TimeService_getTime_CMockReturnMemThruPtr_time(__LINE__, time, sizeof(Time))
#define TimeService_getTime_ReturnArrayThruPtr_time(time, cmock_len) TimeService_getTime_CMockReturnMemThruPtr_time(__LINE__, time, cmock_len * sizeof(*time))
#define TimeService_getTime_ReturnMemThruPtr_time(time, cmock_size) TimeService_getTime_CMockReturnMemThruPtr_time(__LINE__, time, cmock_size)
void TimeService_getTime_CMockReturnMemThruPtr_time(UNITY_LINE_TYPE cmock_line, Time const* time, size_t cmock_size);
#define TimeService_getTime_IgnoreArg_time() TimeService_getTime_CMockIgnoreArg_time(__LINE__)
void TimeService_getTime_CMockIgnoreArg_time(UNITY_LINE_TYPE cmock_line);
#define TimeService_startPeriodicAlarm_IgnoreAndReturn(cmock_retval) TimeService_startPeriodicAlarm_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void TimeService_startPeriodicAlarm_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define TimeService_startPeriodicAlarm_StopIgnore() TimeService_startPeriodicAlarm_CMockStopIgnore()
void TimeService_startPeriodicAlarm_CMockStopIgnore(void);
#define TimeService_startPeriodicAlarm_ExpectAnyArgsAndReturn(cmock_retval) TimeService_startPeriodicAlarm_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void TimeService_startPeriodicAlarm_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define TimeService_startPeriodicAlarm_ExpectAndReturn(seconds, callback, cmock_retval) TimeService_startPeriodicAlarm_CMockExpectAndReturn(__LINE__, seconds, callback, cmock_retval)
void TimeService_startPeriodicAlarm_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int seconds, cmock_TimeService_func_ptr1 callback, int cmock_to_return);
typedef int (* CMOCK_TimeService_startPeriodicAlarm_CALLBACK)(int seconds, cmock_TimeService_func_ptr1 callback, int cmock_num_calls);
void TimeService_startPeriodicAlarm_AddCallback(CMOCK_TimeService_startPeriodicAlarm_CALLBACK Callback);
void TimeService_startPeriodicAlarm_Stub(CMOCK_TimeService_startPeriodicAlarm_CALLBACK Callback);
#define TimeService_startPeriodicAlarm_StubWithCallback TimeService_startPeriodicAlarm_Stub
#define TimeService_startPeriodicAlarm_IgnoreArg_seconds() TimeService_startPeriodicAlarm_CMockIgnoreArg_seconds(__LINE__)
void TimeService_startPeriodicAlarm_CMockIgnoreArg_seconds(UNITY_LINE_TYPE cmock_line);
#define TimeService_startPeriodicAlarm_IgnoreArg_callback() TimeService_startPeriodicAlarm_CMockIgnoreArg_callback(__LINE__)
void TimeService_startPeriodicAlarm_CMockIgnoreArg_callback(UNITY_LINE_TYPE cmock_line);
#define TimeService_stopPeriodicAlarm_Ignore() TimeService_stopPeriodicAlarm_CMockIgnore()
void TimeService_stopPeriodicAlarm_CMockIgnore(void);
#define TimeService_stopPeriodicAlarm_StopIgnore() TimeService_stopPeriodicAlarm_CMockStopIgnore()
void TimeService_stopPeriodicAlarm_CMockStopIgnore(void);
#define TimeService_stopPeriodicAlarm_ExpectAnyArgs() TimeService_stopPeriodicAlarm_CMockExpectAnyArgs(__LINE__)
void TimeService_stopPeriodicAlarm_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define TimeService_stopPeriodicAlarm_Expect(handle) TimeService_stopPeriodicAlarm_CMockExpect(__LINE__, handle)
void TimeService_stopPeriodicAlarm_CMockExpect(UNITY_LINE_TYPE cmock_line, int handle);
typedef void (* CMOCK_TimeService_stopPeriodicAlarm_CALLBACK)(int handle, int cmock_num_calls);
void TimeService_stopPeriodicAlarm_AddCallback(CMOCK_TimeService_stopPeriodicAlarm_CALLBACK Callback);
void TimeService_stopPeriodicAlarm_Stub(CMOCK_TimeService_stopPeriodicAlarm_CALLBACK Callback);
#define TimeService_stopPeriodicAlarm_StubWithCallback TimeService_stopPeriodicAlarm_Stub
#define TimeService_stopPeriodicAlarm_IgnoreArg_handle() TimeService_stopPeriodicAlarm_CMockIgnoreArg_handle(__LINE__)
void TimeService_stopPeriodicAlarm_CMockIgnoreArg_handle(UNITY_LINE_TYPE cmock_line);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
